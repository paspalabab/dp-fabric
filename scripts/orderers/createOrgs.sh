function createOrgs() {
  infoln "Enrolling the CA admin"
  
  mkdir -p ${FABRIC_CA_CLIENT_HOME}

  set -x
  fabric-ca-client enroll \
  -u https://${CA_ADMIN_NAME}:${CA_ADMIN_PW}@${CA_SERVICE_ADDRESS} \
  --caname ${FABRIC_CA_NAME} \
  --tls.certfiles ${FABRIC_CA_CERT}
  { set +x; } 2>/dev/null

  echo "NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/${CA_SERVICE_IP}-${CA_SERVICE_PORT}-fabric-ca.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/${CA_SERVICE_IP}-${CA_SERVICE_PORT}-fabric-ca.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/${CA_SERVICE_IP}-${CA_SERVICE_PORT}-fabric-ca.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/${CA_SERVICE_IP}-${CA_SERVICE_PORT}-fabric-ca.pem
    OrganizationalUnitIdentifier: orderer" \
  >"${FABRIC_CA_CLIENT_HOME}/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy orderer org's CA cert to orderer org's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${FABRIC_CA_CLIENT_HOME}/msp/tlscacerts"
  cp ${FABRIC_CA_CERT} \
  "${FABRIC_CA_CLIENT_HOME}/msp/tlscacerts/tlsca.example.com-cert.pem"

  # Copy orderer org's CA cert to orderer org's /tlsca directory (for use by clients)
  mkdir -p "${FABRIC_CA_CLIENT_HOME}/tlsca"
  cp ${FABRIC_CA_CERT} \
  "${FABRIC_CA_CLIENT_HOME}/tlsca/tlsca.example.com-cert.pem"

  infoln "Registering orderer"
  set -x
  fabric-ca-client register \
  --caname ${FABRIC_CA_NAME} --id.name ${CA_REG_ORDERER_NAME} --id.secret ${CA_REG_ORDERER_PW} \
  --id.type orderer \
  --tls.certfiles ${FABRIC_CA_CERT}
  { set +x; } 2>/dev/null

  infoln "Generating the orderer msp"
  set -x
  fabric-ca-client enroll \
  -u https://${CA_REG_ORDERER_NAME}:${CA_REG_ORDERER_PW}@${CA_SERVICE_ADDRESS} \
  --caname ${FABRIC_CA_NAME} \
  -M "${FABRIC_CA_CLIENT_HOME}/orderers/msp" \
  --csr.hosts ${CA_REG_ORDERER_HOST} --csr.hosts localhost \
  --tls.certfiles ${FABRIC_CA_CERT}
  { set +x; } 2>/dev/null

  cp "${FABRIC_CA_CLIENT_HOME}/msp/config.yaml" \
  "${FABRIC_CA_CLIENT_HOME}/orderers/msp/config.yaml"

  infoln "Generating the orderer-tls certificates"
  set -x
  fabric-ca-client enroll \
  -u https://${CA_REG_ORDERER_NAME}:${CA_REG_ORDERER_PW}@${CA_SERVICE_ADDRESS} \
  --caname ${FABRIC_CA_NAME} \
  -M "${FABRIC_CA_CLIENT_HOME}/orderers/tls" \
  --enrollment.profile tls \
  --csr.hosts ${CA_REG_ORDERER_HOST} --csr.hosts localhost \
  --tls.certfiles ${FABRIC_CA_CERT}
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the orderer's tls directory that are referenced by orderer startup config
  cp "${FABRIC_CA_CLIENT_HOME}/orderers/tls/tlscacerts/"* \
  "${FABRIC_CA_CLIENT_HOME}/orderers/tls/ca.crt"
  cp "${FABRIC_CA_CLIENT_HOME}/orderers/tls/signcerts/"* \
  "${FABRIC_CA_CLIENT_HOME}/orderers/tls/server.crt"
  cp "${FABRIC_CA_CLIENT_HOME}/orderers/tls/keystore/"* \
  "${FABRIC_CA_CLIENT_HOME}/orderers/tls/server.key"

  # Copy orderer org's CA cert to orderer's /msp/tlscacerts directory (for use in the orderer MSP definition)
  mkdir -p "${FABRIC_CA_CLIENT_HOME}/orderers/msp/tlscacerts"
  cp "${FABRIC_CA_CLIENT_HOME}/orderers/tls/tlscacerts/"* \
  "${FABRIC_CA_CLIENT_HOME}/orderers/msp/tlscacerts/tlsca.example.com-cert.pem"

  infoln "Registering the orderer admin"
  set -x
  fabric-ca-client register \
  --caname ${FABRIC_CA_NAME} --id.name ${CA_REG_ORDERER_ADMIN_NAME} --id.secret ${CA_REG_ORDERER_ADMIN_PW} \
  --id.type admin \
  --tls.certfiles ${FABRIC_CA_CERT}
  { set +x; } 2>/dev/null

  infoln "Generating the admin msp"
  set -x
  fabric-ca-client enroll \
  -u https://${CA_REG_ORDERER_ADMIN_NAME}:${CA_REG_ORDERER_ADMIN_PW}@${CA_SERVICE_ADDRESS} \
  --caname ${FABRIC_CA_NAME} \
  -M "${FABRIC_CA_CLIENT_HOME}/users/Admin@example.com/msp" \
  --tls.certfiles ${FABRIC_CA_CERT}
  { set +x; } 2>/dev/null

  cp "${FABRIC_CA_CLIENT_HOME}/msp/config.yaml" \
  "${FABRIC_CA_CLIENT_HOME}/users/Admin@example.com/msp/config.yaml"
}